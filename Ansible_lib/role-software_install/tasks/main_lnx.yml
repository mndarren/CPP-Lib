---
 - name: Check if sf is installed
   stat: path= #path to sf
   register: sf

 - block:
     - name: download sf
       get_url:
           dest: "{{ linux_tmp }}/{{ linux_install[sf_version].install_package }}"
           url: "{{ linux_install.linux_sf_url }}/{{ linux_install[sf_version].install_package }}"

     - name: extract sf
       unarchive:
           src: "{{ linux_tmp }}/{{ linux_install[sf_version].install_package }}"
           dest: "{{ linux_tmp }}"
           copy: no

     - name: install rpm package deps
       package:
         name: "{{ item }}"
       with_items: "{{ linux_install[sf_version].pkg_deps[ansible_os_family + ansible_distribution_major_version] }}"

     - name: Create response file for sf installer
       template: src="templates/{{ linux_install[sf_version].response_file }}" dest="{{ linux_tmp }}/sf_response" mode=0644

     - name: Install sf
       raw: "{{ linux_install[sf_version].sf_installer[ansible_os_family + ansible_distribution_major_version] }} -responsefile {{ linux_tmp }}/sf_response"

     - name: Enable sf Enterprise features
       raw: yes | /opt/VRTSvlic/bin/vxkeyless set SFENT
       when: sf_version == '6.2'

     - name: restart machine
       shell: sleep 2 && shutdown -r now "Ansible updates triggered"
       async: 1
       poll: 0
       when: ansible_os_family == 'Suse'

     - name: waiting for server
       local_action: wait_for host={{ inventory_hostname }} state=started port=22 delay=30 timeout=300
       when: ansible_os_family == 'Suse'
   when: sf.stat.islnk is not defined
