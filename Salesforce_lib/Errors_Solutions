# Errors Fixed Solution 4 SF
===========================================
1. Error: Apex CPU Time limit exceeded
```
   # Reason
     . 10 seconds for sync limit, 60 for Async limit;
	 . Counts: Yes - Apex code, Lib function, Workflow
	           No  - SOQL, SML, HTTP callouts
   # Solutions
   1) Using map based on query
      Map<Id, Account> aMap = new Map<Id, Account>([SELECT Id, Name FROM Account LIMIT 50000]);
	  Don't get query result and then use a loop to get the Id set or other list.
   2) Operation Async: @future
   3) Aggregate SOQL usage: SUM,AVG... Don't use a loop to do sum.
   4) On VF page, if too much data on the page to update, then
      Add rendered="{!classInstance.collateral.size <= maxCollateralViewSize}" on the pageBlockSection
```
2. Error: Aggregate query has too many rows for direct assignment, use FOR loop
```
   # Reason
     When accessing a large set of child records (200 or more) of a retrieved sObject inside the loop, or when getting the size of such a record set.
   # Solution
	 . Using Parent/Children Pattern to solve it(Put all queries in Children or Parent Class).
   # Note:
     . Always use SOQL For Loop (not Standard SOQL Queries) to process query results, to avoid the limit on heap size
	   e.g. for(varible/varible_list : [soql_query]) {}
	   But a run-time exception occurs if you use a query containing an aggregate function that returns >2000 rows.
``` 
3. Error: Required field is missing: label
```
   If you deplying Page the page shouldbe extension with ( .page) and realted meta data file should be with extension (.page-meta.xml).
```
4. Error: selenium unable to find a matching set of capabilities (session created) for Firefox
```
   We should install Firefox, then error solved.
```
5. Error: List has no rows for assignment to SObject
```
   # Reason: missed a null check for query returning objects
   # Example for fixed case:
   @TestVisible
   public static boolean accQuery(Id recordId)
   {
	if(recordId == null) return false;
	// The return type is a List with 'LIMIT 1' in query to avoid Error "List has no rows for assignment to SObject"
	List<Account> aList = [SELECT Id FROM Account WHERE Id=:recordId LIMIT 1];
	if (aList.isEmpty() && Credit_Status_CTRL.INVALID_STATUS.contains(aList[0].Id)) return true;
	return false;
   }
```
6. Error: INVALID_QUERY_LOCATOR
```
   # Reason: Each Salesforce user can have up to 10 query cursors open at a time. 
   # 		If 10 query locator cursors are opened when a client application attempts to open a new one, then the oldest cursor is released.
   # 		If a call is attempted to an expired or released cursor, salesforce.com will return the 'INVALID_QUERY_LOCATOR' error. 
   # Fixed it for one case in SomeClass.cls by using a new query
   // https://help.salesforce.com/articleView?id=000323582&language=en_US&type=1&mode=1
        Opportunity opp = [select id, (select id, Titled__c, Purchase_Price__c from Collateral__r)
                           from Opportunity where Id = :oppId limit 1];
```
